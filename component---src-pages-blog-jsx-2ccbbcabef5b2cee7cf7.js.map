{"version":3,"file":"component---src-pages-blog-jsx-2ccbbcabef5b2cee7cf7.js","mappings":"mJAeA,IAZuBA,GACrB,0BAAQC,GAAG,UACT,0BAAKD,EAAME,OACVF,EAAMG,UAAY,yBAAIH,EAAMG,U,+EC6CjC,MAjDgBH,GACd,0BAAQC,GAAG,UACT,+BACE,0BAAI,UACJ,yBAAG,qKAGH,sBAAIG,UAAU,WACZ,0BACE,qBAAGC,KAAK,yBAAyBD,UAAU,SAASE,OAAO,SAASC,IAAI,uBAAsB,+BAMpG,+BACE,0BAAI,iBACJ,sBAAIH,UAAU,OACZ,0BAAI,SACJ,0BACE,qBAAGC,KAAK,KAAI,iCAGhB,sBAAID,UAAU,SACZ,0BACE,qBAAGC,KAAK,mCAAmCD,UAAU,sBAAsBG,IAAI,uBAC7E,wBAAMH,UAAU,SAAQ,aAG5B,0BACE,qBAAGC,KAAK,kCAAkCD,UAAU,qBAAqBG,IAAI,uBAC3E,wBAAMH,UAAU,SAAQ,YAG5B,0BACE,qBACEC,KAAK,4CACLD,UAAU,uBACVG,IAAI,uBAEJ,wBAAMH,UAAU,SAAQ,gBAKhC,qBAAGA,UAAU,aAAY,MAAQ,IAAII,MAAOC,cAAc,oBCM9D,MAtCY,YACV,WAAYT,GAAQ,IAAD,EAIf,OAHF,cAAMA,IAAM,MACPU,MAAQ,CACXC,QAAS,cACT,CACJ,EANU,YAMT,kBAyBA,OAzBA,EAEDC,kBAAA,WACEC,KAAKC,UAAYC,YAAW,KAC1BF,KAAKG,SAAS,CAAEL,QAAS,IAAK,GAC7B,IACL,EAAC,EAEDM,qBAAA,WACMJ,KAAKC,WACPI,aAAaL,KAAKC,UAEtB,EAAC,EAEDK,OAAA,WACE,MAAM,SAAEC,GAAaP,KAAKb,MAE1B,OACE,uBAAKI,UAAS,QAAUS,KAAKH,MAAMC,SACjC,uBAAKV,GAAG,WACLmB,EACD,gBAAC,EAAM,OAIf,EAAC,EA/BS,CAASC,EAAAA,U,uHCVd,MAAMC,EAAO,IAAe,IAAd,KAAEC,GAAM,EAC3B,MAAMC,EAAYD,EAAKE,KAAKC,aAAaxB,MAEzC,OACE,gCACE,uCAAkBsB,GAClB,wBAAMG,KAAK,cAAcC,QAAQ,sCAChC,EAEN,IAEKC,EAAI,8DAoBP,OApBO,wBACRV,OAAA,WACE,MAAM,KAAEI,GAASV,KAAKb,MACtB,OACE,gBAAC,IAAM,KACL,gBAAC,IAAa,CAACE,MAAM,SACrB,uBAAKD,GAAG,QACN,2BAASA,GAAG,UAAUG,UAAU,QAC7BmB,EAAKO,MAAMC,MAAMC,KAAI,QAAGC,KAAMC,GAAM,SACnC,2BAASC,IAAKD,EAAKE,MACjB,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAIJ,EAAKE,MAAOF,EAAKK,YAAYrC,QAEzC,yBAAIgC,EAAKM,QAAQC,QAAQ,gDAAiD,IAAIC,QACtE,MAMtB,EAAC,EApBO,CAASrB,EAAAA,WAuBnB,W","sources":["webpack://mike-plummer.github.io/./src/components/HeaderGeneric.js","webpack://mike-plummer.github.io/./src/components/Footer.js","webpack://mike-plummer.github.io/./src/components/Layout.js","webpack://mike-plummer.github.io/./src/pages/blog.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst HeaderGeneric = (props) => (\n  <header id=\"header\">\n    <h1>{props.title}</h1>\n    {props.subtitle && <p>{props.subtitle}</p>}\n  </header>\n);\n\nHeaderGeneric.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string\n};\n\nexport default HeaderGeneric;\n","import React from 'react';\n\nconst Footer = (props) => (\n  <footer id=\"footer\">\n    <section>\n      <h2>Status</h2>\n      <p>\n        Mike works for Cypress.io, building tools to enable seamlessly fast, incredibly reliable, and delightfully easy testing for anything you can render in a browser.\n      </p>\n      <ul className=\"actions\">\n        <li>\n          <a href=\"https://www.cypress.io\" className=\"button\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Learn More about Cypress\n          </a>\n        </li>\n      </ul>\n    </section>\n    <section>\n      <h2>Get in touch!</h2>\n      <dl className=\"alt\">\n        <dt>Email</dt>\n        <dd>\n          <a href=\"#\">plummer.mike.j-at-gmail.com</a>\n        </dd>\n      </dl>\n      <ul className=\"icons\">\n        <li>\n          <a href=\"https://twitter.com/plummer_mike\" className=\"icon fa-twitter alt\" rel=\"noopener noreferrer\">\n            <span className=\"label\">Twitter</span>\n          </a>\n        </li>\n        <li>\n          <a href=\"https://github.com/mike-plummer\" className=\"icon fa-github alt\" rel=\"noopener noreferrer\">\n            <span className=\"label\">GitHub</span>\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://www.linkedin.com/in/plummermikej/\"\n            className=\"icon fa-linkedin alt\"\n            rel=\"noopener noreferrer\"\n          >\n            <span className=\"label\">LinkedIn</span>\n          </a>\n        </li>\n      </ul>\n    </section>\n    <p className=\"copyright\">&copy; {new Date().getFullYear()} - Mike Plummer</p>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'font-awesome/css/font-awesome.css';\nimport '../assets/scss/main.scss';\n\nimport Footer from '../components/Footer';\n\nexport const Head = () => {\n  return (\n    <>\n      <html lang='en-US' />\n    </>\n  )\n}\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: 'is-loading'\n    };\n  }\n\n  componentDidMount() {\n    this.timeoutId = setTimeout(() => {\n      this.setState({ loading: '' });\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className={`body ${this.state.loading}`}>\n        <div id=\"wrapper\">\n          {children}\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Layout;\n","import React from 'react';\nimport HeaderGeneric from '../components/HeaderGeneric';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/Layout';\n\nexport const Head = ({ data }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <>\n      <title>{`Blog | ${siteTitle}`}</title>\n      <meta name=\"description\" content=\"Blog posts that Mike has written.\" />\n    </>\n  )\n}\n\nclass Blog extends React.Component {\n  render() {\n    const { data } = this.props;\n    return (\n      <Layout>\n        <HeaderGeneric title=\"Blog\" />\n        <div id=\"main\">\n          <section id=\"content\" className=\"main\">\n            {data.posts.edges.map(({ node: post }) => (\n              <section key={post.slug}>\n                <h1>\n                  <Link to={post.slug}>{post.frontmatter.title}</Link>\n                </h1>\n                <p>{post.excerpt.replace('This was originally posted at Object Partners', '').trim()}</p>\n              </section>\n            ))}\n          </section>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Blog;\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    posts: allMarkdownRemark(\n      sort: {frontmatter: {date: DESC}}\n      filter: {type: {eq: \"posts\"}}\n    ) {\n      edges {\n        node {\n          slug\n          excerpt(pruneLength: 250)\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["props","id","title","subtitle","className","href","target","rel","Date","getFullYear","state","loading","componentDidMount","this","timeoutId","setTimeout","setState","componentWillUnmount","clearTimeout","render","children","React","Head","data","siteTitle","site","siteMetadata","name","content","Blog","posts","edges","map","node","post","key","slug","Link","to","frontmatter","excerpt","replace","trim"],"sourceRoot":""}